{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/deepugupta/Desktop/React-Applications/counter-app/src/components/bar-chart.jsx\";\nimport React from \"react\";\nimport { BarChart } from \"./BarChart\";\nexport function BarGroup(props) {\n  let barPadding = 2;\n  let barColour = props.d.color;\n\n  let heightScale = d => d * 10;\n\n  let height = heightScale(props.d.value); // let xMid = props.barWidth * 0.5;\n\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"bar-group\",\n    children: /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: barPadding * 10,\n      width: props.barWidth - barPadding,\n      height: height,\n      fill: barColour\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = BarGroup;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarGroup\");","map":{"version":3,"sources":["/Users/deepugupta/Desktop/React-Applications/counter-app/src/components/bar-chart.jsx"],"names":["React","BarChart","BarGroup","props","barPadding","barColour","d","color","heightScale","height","value","barWidth"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,SAAS,GAAGF,KAAK,CAACG,CAAN,CAAQC,KAAxB;;AACA,MAAIC,WAAW,GAAIF,CAAD,IAAOA,CAAC,GAAG,EAA7B;;AAEA,MAAIG,MAAM,GAAGD,WAAW,CAACL,KAAK,CAACG,CAAN,CAAQI,KAAT,CAAxB,CAL8B,CAM9B;;AAEA,sBACE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA,2BAIE;AACE,MAAA,CAAC,EAAEN,UAAU,GAAG,EADlB;AAEE,MAAA,KAAK,EAAED,KAAK,CAACQ,QAAN,GAAiBP,UAF1B;AAGE,MAAA,MAAM,EAAEK,MAHV;AAIE,MAAA,IAAI,EAAEJ;AAJR;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;KA7BeH,Q;AA+BhB,eAAeD,QAAf","sourcesContent":["import React from \"react\";\nimport { BarChart } from \"./BarChart\";\n\nexport function BarGroup(props) {\n  let barPadding = 2;\n  let barColour = props.d.color;\n  let heightScale = (d) => d * 10;\n\n  let height = heightScale(props.d.value);\n  // let xMid = props.barWidth * 0.5;\n\n  return (\n    <g className=\"bar-group\">\n      {/* <text className=\"name-label\" y=\"-6\" x={xMid} alignmentBaseline=\"middle\">\n        {props.d.name}\n      </text> */}\n      <rect\n        x={barPadding * 10}\n        width={props.barWidth - barPadding}\n        height={height}\n        fill={barColour}\n      />\n      {/* <text\n        className=\"value-label\"\n        y={height - 100}\n        x={xMid}\n        alignmentBaseline=\"middle\"\n      >\n        {props.d.value}\n      </text> */}\n    </g>\n  );\n}\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}